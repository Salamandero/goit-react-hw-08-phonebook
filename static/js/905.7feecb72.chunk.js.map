{"version":3,"file":"static/js/905.7feecb72.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactEditor/ContactEditor.module.css?ead8","components/ContactEditor/ContactEditor.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"listItem\":\"ContactList_listItem__SptUx\",\"info\":\"ContactList_info__ndqPX\",\"btnDelete\":\"ContactList_btnDelete__Eeo9v\"};","// import { useSelector } from 'react-redux';\n// import { Contact } from '../Contact/Contact';\n// import { selectAllContacts } from 'redux/contacts/selectors';\n// import css from './ContactList.module.css';\n\n// export const ContactList = () => {\n//   const contacts = useSelector(selectAllContacts);\n\n//   return (\n//     <ul className={css.list}>\n//       {contacts.map(({ id, text }) => (\n//         <li key={id}>\n//           <Contact id={id} text={text} />\n//         </li>\n//       ))}\n//     </ul>\n//   );\n// };\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectAllContacts } from '../../redux/contacts/selectors';\n// import { List, ContactItem, Info, BtnInfoDelete } from './ContactList.styled';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectAllContacts);\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase().trim();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n  const visibleContacts = getVisibleContacts();\n  return (\n    <>\n      {contacts.length > 0 && (\n        <ul className={css.list}>\n          {visibleContacts.map(contact => (\n            <li key={contact.id} className={css.listItem}>\n              <p className=\"css.info\">{contact.name}:</p>\n              <p className=\"css.info\">{contact.number}</p>\n              <button\n                className={css.btnDelete}\n                type=\"button\"\n                onClick={() => onDeleteContact(contact.id)}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactEditor_form__U4ufl\",\"label\":\"ContactEditor_label__EWAJt\",\"input\":\"ContactEditor_input__Nbns0\",\"button\":\"ContactEditor_button__yGZhk\"};","import toast from 'react-hot-toast';\n// import { useDispatch } from 'react-redux';\n// import { addContact } from 'redux/contacts/operations';\n// import css from './ContactEditor.module.css';\n\n// export const ContactEditor = () => {\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const form = e.currentTarget;\n//     const text = form.elements.text.value;\n//     if (text !== '') {\n//       dispatch(addContact(text));\n//       form.reset();\n//       return;\n//     }\n//     toast.error('Contact cannot be empty. Enter some text!');\n//   };\n\n//   return (\n//     <form className={css.form} onSubmit={handleSubmit}>\n//       <input name=\"text\" className={css.input} />\n//       <button type=\"submit\" className={css.button}>\n//         Add contact\n//       </button>\n//     </form>\n//   );\n// };\n\n// import { Form, Label, Input, Button } from './ContactForm.styled';\nimport css from './ContactEditor.module.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectAllContacts } from 'redux/contacts/selectors';\n\nexport const ContactEditor = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        return toast.error(`Type field ${name} don't read `);\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    if (!name.trim()) {\n      return toast.error('The field Name is empty, write Name');\n    }\n    if (!phone.trim()) {\n      return toast.error('The field Phone is empty, write Phone');\n    }\n    if (phone.length < 3 || phone.length > 24) {\n      return toast.error(\n        `You wrote ${phone.length} symbols, but need from 3 to 24   `\n      );\n    }\n    const newName = name.trim();\n    const proofName = Object.values(contacts).map(contact => contact.name);\n    if (proofName.includes(newName)) {\n      reset();\n      return toast.error(`${newName} is already in contacts.`);\n    }\n\n    dispatch(addContact({ name: name, number: phone }));\n\n    reset();\n  };\n\n  return (\n    <>\n      <form className={css.form}>\n        <label className={css.label}>\n          Name\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={css.label}>\n          Phone\n          <input\n            className={css.input}\n            type=\"tel\"\n            name=\"phone\"\n            value={phone}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={css.button} type=\"submit\" onClick={handleClick}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"findByName\":\"Filter_findByName__hTpcZ\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\n// import { FindByName, FilterInput } from './Filter.styled';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  // const filter = useSelector(state => state.filter);\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <label className={css.findByName}>\n      Find contact by name:\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        // value={filter}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactEditor />\n      <Filter />\n      {isLoading ? <p> Request in progress...</p> : <ContactList />}\n    </>\n  );\n}\n"],"names":["selectLoading","state","contacts","loading","selectAllContacts","items","ContactList","useSelector","filter","dispatch","useDispatch","visibleContacts","normalizedFilter","toLowerCase","trim","contact","name","includes","getVisibleContacts","length","className","css","map","number","type","onClick","id","deleteContact","ContactEditor","useState","setName","phone","setPhone","handleChange","e","target","value","toast","reset","onChange","pattern","title","required","preventDefault","newName","Object","values","addContact","Filter","setFilter","Contacts","isLoading","useEffect","fetchContacts","Helmet"],"sourceRoot":""}